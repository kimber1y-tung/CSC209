Script started on 2021-02-23 23:09:48-0500
]0;tungwen@wolf:/h/u10/c0/00/tungwen/tungwen/lab6wolf:~/tungwen/lab6$ gdb overflow
GNU gdb (Ubuntu 8.1.1-0ubuntu1) 8.1.1
Copyright (C) 2018 Free Software Foundation, Inc.
License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.  Type "show copying"
and "show warranty" for details.
This GDB was configured as "x86_64-linux-gnu".
Type "show configuration" for configuration details.
For bug reporting instructions, please see:
<http://www.gnu.org/software/gdb/bugs/>.
Find the GDB manual and other documentation resources online at:
<http://www.gnu.org/software/gdb/documentation/>.
For help, type "help".
Type "apropos word" to search for commands related to "word"...
Reading symbols from overflow...done.
(gdb) break main
Breakpoint 1 at 0x742: file overflow.c, line 6.
(gdb) run
Starting program: /h/u10/c0/00/tungwen/tungwen/lab6/overflow 

Breakpoint 1, main () at overflow.c:6
6       int main() {
(gdb) display after
1: after = {1431652912, 21845, 1431651888, 21845}
(gdb) list 36
31          printf("a = {%d, %d, %d, %d}\n", a[0], a[1], a[2], a[3]);
32          printf("after = {%d, %d, %d, %d}\n", after[0], after[1], after[2], after[3]);
33          printf("\n");
34      
35      
36          for (i = 0; i < OVERFLOW; i++) {
37              a[i] = i * 10;
38              printf("i = %d\n", i);
39              printf("before = {%d, %d, %d, %d}\n", before[0], before[1], before[2], before[3]);
40              printf("a = {%d, %d, %d, %d}\n", a[0], a[1], a[2], a[3]);
(gdb) break 36
Breakpoint 2 at 0x555555554959: file overflow.c, line 36.
(gdb) break 33
Breakpoint 3 at 0x55555555494f: file overflow.c, line 33.
(gdb) run
The program being debugged has been started already.
Start it from the beginning? (y or n) y
Starting program: /h/u10/c0/00/tungwen/tungwen/lab6/overflow 

Breakpoint 1, main () at overflow.c:6
6       int main() {
1: after = {1431652912, 21845, 1431651888, 21845}
(gdb) continue
Continuing.
Address of the variables:
7fffffffe960 -> &after[0]
7fffffffe964 -> &after[1]
7fffffffe968 -> &after[2]
7fffffffe96c -> &after[3]
7fffffffe950 -> &a[0]
7fffffffe954 -> &a[1]
7fffffffe958 -> &a[2]
7fffffffe95c -> &a[3]
7fffffffe940 -> &before[0]
7fffffffe944 -> &before[1]
7fffffffe948 -> &before[2]
7fffffffe94c -> &before[3]
7fffffffe93c -> &i
7fffffffe938 -> &index

Initial values:
i = 0
before = {10, 10, 10, 10}
a = {0, 0, 0, 0}
after = {10, 10, 10, 10}

Breakpoint 3, main () at overflow.c:33
33          printf("\n");
1: after = {10, 10, 10, 10}
(gdb) continue
Continuing.


Breakpoint 2, main () at overflow.c:36
36          for (i = 0; i < OVERFLOW; i++) {
1: after = {10, 10, 10, 10}
(gdb) next
37              a[i] = i * 10;
1: after = {10, 10, 10, 10}
(gdb) 
38              printf("i = %d\n", i);
1: after = {10, 10, 10, 10}
(gdb) 
i = 0
39              printf("before = {%d, %d, %d, %d}\n", before[0], before[1], before[2], before[3]);
1: after = {10, 10, 10, 10}
(gdb) 
before = {10, 10, 10, 10}
40              printf("a = {%d, %d, %d, %d}\n", a[0], a[1], a[2], a[3]);
1: after = {10, 10, 10, 10}
(gdb) 
a = {0, 0, 0, 0}
41              printf("after = {%d, %d, %d, %d}\n", after[0], after[1], after[2], after[3]);
1: after = {10, 10, 10, 10}
(gdb) 
after = {10, 10, 10, 10}
36          for (i = 0; i < OVERFLOW; i++) {
1: after = {10, 10, 10, 10}
(gdb) 
37              a[i] = i * 10;
1: after = {10, 10, 10, 10}
(gdb) 
38              printf("i = %d\n", i);
1: after = {10, 10, 10, 10}
(gdb) 
i = 1
39              printf("before = {%d, %d, %d, %d}\n", before[0], before[1], before[2], before[3]);
1: after = {10, 10, 10, 10}
(gdb) 
before = {10, 10, 10, 10}
40              printf("a = {%d, %d, %d, %d}\n", a[0], a[1], a[2], a[3]);
1: after = {10, 10, 10, 10}
(gdb) 
a = {0, 10, 0, 0}
41              printf("after = {%d, %d, %d, %d}\n", after[0], after[1], after[2], after[3]);
1: after = {10, 10, 10, 10}
(gdb) 
after = {10, 10, 10, 10}
36          for (i = 0; i < OVERFLOW; i++) {
1: after = {10, 10, 10, 10}
(gdb) 
37              a[i] = i * 10;
1: after = {10, 10, 10, 10}
(gdb) 
38              printf("i = %d\n", i);
1: after = {10, 10, 10, 10}
(gdb) 
i = 2
39              printf("before = {%d, %d, %d, %d}\n", before[0], before[1], before[2], before[3]);
1: after = {10, 10, 10, 10}
(gdb) 
before = {10, 10, 10, 10}
40              printf("a = {%d, %d, %d, %d}\n", a[0], a[1], a[2], a[3]);
1: after = {10, 10, 10, 10}
(gdb) 
a = {0, 10, 20, 0}
41              printf("after = {%d, %d, %d, %d}\n", after[0], after[1], after[2], after[3]);
1: after = {10, 10, 10, 10}
(gdb) 
after = {10, 10, 10, 10}
36          for (i = 0; i < OVERFLOW; i++) {
1: after = {10, 10, 10, 10}
(gdb) 
37              a[i] = i * 10;
1: after = {10, 10, 10, 10}
(gdb) 
38              printf("i = %d\n", i);
1: after = {10, 10, 10, 10}
(gdb) 
i = 3
39              printf("before = {%d, %d, %d, %d}\n", before[0], before[1], before[2], before[3]);
1: after = {10, 10, 10, 10}
(gdb) 
before = {10, 10, 10, 10}
40              printf("a = {%d, %d, %d, %d}\n", a[0], a[1], a[2], a[3]);
1: after = {10, 10, 10, 10}
(gdb) 
a = {0, 10, 20, 30}
41              printf("after = {%d, %d, %d, %d}\n", after[0], after[1], after[2], after[3]);
1: after = {10, 10, 10, 10}
(gdb) 
after = {10, 10, 10, 10}
36          for (i = 0; i < OVERFLOW; i++) {
1: after = {10, 10, 10, 10}
(gdb) 
37              a[i] = i * 10;
1: after = {10, 10, 10, 10}
(gdb) 
38              printf("i = %d\n", i);
1: after = {40, 10, 10, 10}
(gdb) print &(after[0])
$1 = (int *) 0x7fffffffe960
(gdb) print &(after[0])[1P])4])[1P[4])[1P[4])[1P[4])[1P[4])
$2 = (int *) 0x7fffffffe960
(gdb) quit
A debugging session is active.

        Inferior 1 [process 57394] will be killed.

Quit anyway? (y or n) exit[K[K[K[Ky
]0;tungwen@wolf:/h/u10/c0/00/tungwen/tungwen/lab6wolf:~/tungwen/lab6$ exit
exit

Script done on 2021-02-23 23:11:53-0500
